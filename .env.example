# This file should NEVER be committed which is why .env is included in .gitignore.

# This Ruby version is required, if you change it the app will break
CUSTOM_RUBY_VERSION='2.4.0'

# ======================== Orientation Configuration ========================= #
# Domain at which Orientation will be hosted
ORIENTATION_DOMAIN=orientation.dev
#
# Google Apps email domain from which users will be allowed to sign in
# ORIENTATION_EMAIL_WHITELIST=hanso.dk
#
# If changed, the logo and favicon files will need to be present inside
# of app/assets/images
ORIENTATION_LOGO=default_logo.svg
ORIENTATION_FAVICON=default_favicon.png

# IDs for administrator users separated by commas , for now all they can do is delete authors.
ADMINISTRATORS="1,2,42"

# "From" mailer & Slack settings
DEFAULT_FROM_NAME=Dox Wiki
DEFAULT_FROM_EMAIL=ops@doximity.com

# Sets the app name, which is used in the OpenSearch description. Change this to
# something more representative of your usage. E.g. "Company Inc. Wiki"
APP_NAME=Orientation

# ============================ Rails configuration =========================== #
SECRET_KEY_BASE=
DATABASE_NAME=orientation_development
DATABASE_USERNAME=this_should_be_your_local_database_username
# leave this empty if you don't have a password on your local db
DATABASE_PASSWORD=

# ============================ Let's Encrypt ================================= #
# See https://github.com/pixielabs/letsencrypt-rails-heroku/#configuring for
# further details on how SSL certificates are generated and what is required
# from your Heroku app in order to use this feature.
#
# Comma separated list of domains for which you want certificates:
#   e.g. example.com,www.example.com.
# Your Heroku app should be configured to answer to all these domains, because
# Let's Encrypt will make a request to verify ownership.
# ACME_DOMAIN= example.com, www.example.com
#
# Your email address, should be valid.
# ACME_EMAIL=email@example.com
#
# An API token for this app. See "Creating a Heroku Token" below.
# HEROKU_TOKEN=
#
# Name of Heroku app e.g. bottomless-cavern-7173
# HEROKU_APP=
#
# --- Creating a Heroku token ---
# Use the heroku-oauth toolbelt plugin to generate an access token suitable for
# accessing the Heroku API to update the certificates.
#
# Inside your project directory, run:
#
#   heroku plugins:install heroku-cli-oauth
#   heroku authorizations:create -d "LetsEncrypt"
#
# It will output something like:
#   Created OAuth authorization.
#   ID:          <heroku-client-id>
#   Description: LetsEncrypt
#   Scope:       global
#   Token:       <heroku-token>
#
# Use the output of that to set the token (HEROKU_TOKEN).

# ================================ Slack ===================================== #
# You'll need to configure an incoming webhook on Slack in order for article
# notifications to function properly:
#   https://my.slack.com/services/new/incoming-webhook
#
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/xxx/yyy/zzzzzzzzzzzz

# ================================ OAuth ===================================== #
# Google OAuth 2
#
# Create a new project on Google's API console here:
#  https://console.developers.google.com/
#
# Then enable the Google+ and Contacts APIs for this project.
#   e.g. 831a244758x7.apps.googleusercontent.com
GOOGLE_KEY=fake_google_key
#   e.g. 5Ac5Fcigyty0tRO6b4c4Zh4E
GOOGLE_SECRET=fake_google_secret

# Sendgrid
SENDGRID_USERNAME=
SENDGRID_PASSWORD=

# =========================== Bug Reporting ================================== #
# Set the following two variables in your production environment if you want to
# use Bugsnag and Skylight, otherwise feel free to ignore them
#
# Bugsnag for exception reporting
# BUGSNAG_API_KEY=blabla

# ======================= Performance Monitoring ============================= #
# Skylight for request logging
# SKYLIGHT_AUTHENTICATION=blabla

# Cloudinary env variables
CLOUDINARY_CLOUD_NAME=fake_cloud
CLOUDINARY_API_KEY=fake_key
CLOUDINARY_API_SECRET=not_a_secret

# ========================== Algolia Search ================================== #
# The following two variables are used by Algolia (https://www.algolia.com), the
# tool we use to index our articles and provide search auto-suggest and results.
# To get the Algolia account credentials, talk to Bruno, then log in and look
# for the 'dox-orientation-dev' app
# if not found or if app has expired: delete the existing dox-orientation-dev
# app and create a new one, then follow the 'if found' step below:
# if found: click into it, click API keys on the left side, and copy over the
# Application ID (ALGOLIA_APP_ID), Admin API Key (ALGOLIA_API_KEY), and
# Search-Only API Key (ALGOLIA_SEARCH_ONLY_API_KEY)
# Now in your terminal, run `rake index_articles` so that the Articles index
# on Algolia for the dox-orientation-dev app reflects your local Articles
ALGOLIA_APP_ID=
ALGOLIA_ADMIN_API_KEY=
ALGOLIA_SEARCH_ONLY_API_KEY=
