.g
  .g-b.g-b--m--2of3

    %p.label.mbxs= label_text

    .form
      = simple_form_for @article do | f |

        .form-field
          = f.input_field :title, placeholder: 'Enter an Article Title',
            class: 'form-input form-input--clear tfh tsl ts--m--xl'

        .form-field.js-editor

          .form-overlay.js-editor-overlay
            = link_to '#', class: 'form-field-toggle form-field-toggle--open js-editor-open' do
              = render partial: 'shared/icon', locals: { icon: 'arrows-alt', title: 'Open Editor' }

            = link_to '#', class: 'form-field-toggle form-field-toggle--close js-editor-close' do
              = render partial: 'shared/icon', locals: { icon: 'times', title: 'Close Editor' }

            = f.input_field :content, rows: 15, class: 'form-input form-textarea js-editor-textarea',
              placeholder: "See guide to creating Awesome Wiki Articles on the right ----------------->"

        .form-field
          = f.label :author do
            %span.form-label.label Author
            - user_id = @article.new_record? ? current_user.id : @article.author_id
            = f.input_field :author_id, collection: User.active.order(:name), include_blank: false, selected: user_id

        .form-field
          = f.label :tag_tokens do
            %span.form-label.label
              = "Tags (pick generally applicable tags, see #{link_to 'Tags', tags_url} page for ideas)".html_safe
            = f.input_field :tag_tokens, data: { load: @tags }

        .form-field
          = f.label :category_tokens do
            %span.form-label.label
              = "Categories (assign this article to a category displayed on the home page)".html_safe
            = f.input_field :category_tokens, data: { load: @categories }

        .form-field
          = f.label :images do
            %span.form-label.label Images
            = f.input :images, as: :attachinary

        - if @article.author.blank?
          .form-field
            = f.input :author_id, as: :hidden, input_html: { value: current_user.try(:id) }

        .form-field.mbl
          = f.input :editor_id, as: :hidden, input_html: { value: current_user.try(:id) }

        = f.button :submit, class: 'btn btn--a btn--l'

  .g-b.g-b--m--1of3
    %br
    .card.card--b.has-card-section
      %h2.tac.mbs Article README
      %h4.tac.mbs
        = link_to "Creating Awesome Wiki Articles", "/articles/creating-awesome-wiki-articles"
      %br
    %br
    .card.card--b.has-card-section
      = render "markdown_guide"
